-- MySQL Script generated by MySQL Workbench
-- 05/02/17 18:07:49
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema EVE
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema EVE
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `EVE` DEFAULT CHARACTER SET utf8 ;
USE `EVE` ;

-- -----------------------------------------------------
-- Table `EVE`.`questions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`questions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `question` VARCHAR(1000) NULL,
  `type` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 197
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`scene`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`scene` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `scene_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `scene_name_UNIQUE` (`scene_name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 78
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`experiment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`experiment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `experiment_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `experiment_name_UNIQUE` (`experiment_name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 78
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`experiment_scene_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`experiment_scene_order` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `scenes_id` INT NOT NULL,
  `experiment_id` INT NOT NULL,
  `experiment_order` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_experiment_scene_order_scenes1_idx` (`scenes_id` ASC),
  INDEX `fk_experiment_scene_order_experiment1_idx` (`experiment_id` ASC),
  CONSTRAINT `fk_experiment_scene_order_scenes1`
    FOREIGN KEY (`scenes_id`)
    REFERENCES `EVE`.`scene` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_experiment_scene_order_experiment1`
    FOREIGN KEY (`experiment_id`)
    REFERENCES `EVE`.`experiment` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 78
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`sessions` (
  `session_id` INT NOT NULL AUTO_INCREMENT,
  `experiment_id` INT NOT NULL,
  `labchart_timestamp` VARCHAR(50) NULL DEFAULT NULL,
  `labchart_file` VARCHAR(500) NULL DEFAULT NULL,
  `subject_id` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`session_id`),
  UNIQUE INDEX `session_id_UNIQUE` (`session_id` ASC),
  INDEX `fk_sessions_experiment1_idx` (`experiment_id` ASC),
  CONSTRAINT `fk_sessions_experiment1`
    FOREIGN KEY (`experiment_id`)
    REFERENCES `EVE`.`experiment` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 0
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`store_strings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`store_strings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `pos` INT UNSIGNED NOT NULL,
  `val` VARCHAR(5000) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`questionnaires`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`questionnaires` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `description_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`user_answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`user_answers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `session_id` INT NOT NULL,
  `questionnaire_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_useranswers_sessions1_idx` (`session_id` ASC),
  INDEX `fk_useranswers_questionnaire_table1_idx` (`questionnaire_id` ASC),
  CONSTRAINT `fk_useranswers_sessions1`
    FOREIGN KEY (`session_id`)
    REFERENCES `EVE`.`sessions` (`session_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_useranswers_questionnaire_table1`
    FOREIGN KEY (`questionnaire_id`)
    REFERENCES `EVE`.`questionnaires` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 386
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `EVE`.`question_sets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`question_sets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`question_question_sets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`question_question_sets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `question_set_id` INT NULL,
  `question_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_qq_table_questions1_idx` (`question_id` ASC),
  INDEX `fk_questionnaire_question_set_table_question_sets1_idx` (`question_set_id` ASC),
  UNIQUE INDEX `index5` (`question_set_id` ASC, `question_id` ASC),
  CONSTRAINT `fk_qq_table_questions1`
    FOREIGN KEY (`question_id`)
    REFERENCES `EVE`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_questionnaire_question_set_table_question_sets1`
    FOREIGN KEY (`question_set_id`)
    REFERENCES `EVE`.`question_sets` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`store_answers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`store_answers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `question_id` INT NULL,
  `user_answer_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_storeanswers_useranswers1_idx` (`user_answer_id` ASC),
  INDEX `fk_storeanswers_questions1_idx` (`question_id` ASC),
  CONSTRAINT `fk_storeanswers_useranswers1`
    FOREIGN KEY (`user_answer_id`)
    REFERENCES `EVE`.`user_answers` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_storeanswers_questions1`
    FOREIGN KEY (`question_id`)
    REFERENCES `EVE`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`jumps`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`jumps` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `question_set` INT NULL,
  `origin_id` INT NULL,
  `dest_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ID_UNIQUE` (`id` ASC),
  INDEX `fk_jumps_questions1_idx` (`origin_id` ASC),
  INDEX `fk_jumps_questions2_idx` (`dest_id` ASC),
  INDEX `fk_jumps_question_sets1_idx` (`question_set` ASC),
  CONSTRAINT `fk_jumps_questions1`
    FOREIGN KEY (`origin_id`)
    REFERENCES `EVE`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_jumps_questions2`
    FOREIGN KEY (`dest_id`)
    REFERENCES `EVE`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_jumps_question_sets1`
    FOREIGN KEY (`question_set`)
    REFERENCES `EVE`.`question_sets` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`jump_conditions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`jump_conditions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `jump_id` INT NOT NULL,
  `option_id` INT NULL,
  `assign` TINYINT(1) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_jump_conditions_table_jumps1_idx` (`jump_id` ASC),
  UNIQUE INDEX `index4` (`jump_id` ASC, `option_id` ASC),
  CONSTRAINT `fk_jump_conditions_table_jumps1`
    FOREIGN KEY (`jump_id`)
    REFERENCES `EVE`.`jumps` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`questionnaire_question_sets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`questionnaire_question_sets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `questionnaire_id` INT NULL,
  `question_set_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_questionnaire_question_set_table_questionnaire_table1_idx` (`questionnaire_id` ASC),
  INDEX `fk_questionnaire_question_set_table_question_sets2_idx` (`question_set_id` ASC),
  UNIQUE INDEX `index5` (`questionnaire_id` ASC, `question_set_id` ASC),
  CONSTRAINT `fk_questionnaire_question_set_table_questionnaire_table1`
    FOREIGN KEY (`questionnaire_id`)
    REFERENCES `EVE`.`questionnaires` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_questionnaire_question_set_table_question_sets2`
    FOREIGN KEY (`question_set_id`)
    REFERENCES `EVE`.`question_sets` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`data_origin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`data_origin` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `device_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`data_description`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`data_description` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `device_id` INT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_sensor_output_sensors1_idx` (`device_id` ASC),
  CONSTRAINT `fk_sensor_output_sensors1`
    FOREIGN KEY (`device_id`)
    REFERENCES `EVE`.`data_origin` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`data_units`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`data_units` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description_id` INT NOT NULL,
  `unit` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sensor_units_sensor_output1_idx` (`description_id` ASC),
  CONSTRAINT `fk_sensor_units_sensor_output1`
    FOREIGN KEY (`description_id`)
    REFERENCES `EVE`.`data_description` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`sensor_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`sensor_data` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data_description_id` INT NOT NULL,
  `session_id` INT NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  `time` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sensor_data_sensor_output1_idx` (`data_description_id` ASC),
  INDEX `fk_sensor_data_sessions1_idx` (`session_id` ASC),
  CONSTRAINT `fk_sensor_data_sensor_output1`
    FOREIGN KEY (`data_description_id`)
    REFERENCES `EVE`.`data_description` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sensor_data_sessions1`
    FOREIGN KEY (`session_id`)
    REFERENCES `EVE`.`sessions` (`session_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`questions_stored_strings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`questions_stored_strings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `questions_id` INT NOT NULL,
  `string_id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_questions_stored_strings_questions1_idx` (`questions_id` ASC),
  INDEX `fk_questions_stored_strings_store_strings1_idx` (`string_id` ASC),
  CONSTRAINT `fk_questions_stored_strings_questions1`
    FOREIGN KEY (`questions_id`)
    REFERENCES `EVE`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_questions_stored_strings_store_strings1`
    FOREIGN KEY (`string_id`)
    REFERENCES `EVE`.`store_strings` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`answers_stored_strings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`answers_stored_strings` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `answer_id` INT NOT NULL,
  `string_id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_answers_stored_strings_store_answers1_idx` (`answer_id` ASC),
  INDEX `fk_answers_stored_strings_store_strings1_idx` (`string_id` ASC),
  CONSTRAINT `fk_answers_stored_strings_store_answers1`
    FOREIGN KEY (`answer_id`)
    REFERENCES `EVE`.`store_answers` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_answers_stored_strings_store_strings1`
    FOREIGN KEY (`string_id`)
    REFERENCES `EVE`.`store_strings` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`experiment_parameter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`experiment_parameter` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `experiment_id` INT NOT NULL,
  `parameter_description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_experiment_parameters_experiment1_idx` (`experiment_id` ASC),
  UNIQUE INDEX `parameter_description_UNIQUE` (`parameter_description` ASC),
  CONSTRAINT `fk_experiment_parameters_experiment1`
    FOREIGN KEY (`experiment_id`)
    REFERENCES `EVE`.`experiment` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`session_parameter_values`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`session_parameter_values` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `session_id` INT NOT NULL,
  `experiment_parameter_id` INT NOT NULL,
  `value` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_Session_parameters_sessions1_idx` (`session_id` ASC),
  INDEX `fk_session_parameter_values_experiment_parameter1_idx` (`experiment_parameter_id` ASC),
  CONSTRAINT `fk_Session_parameters_sessions1`
    FOREIGN KEY (`session_id`)
    REFERENCES `EVE`.`sessions` (`session_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_parameter_values_experiment_parameter1`
    FOREIGN KEY (`experiment_parameter_id`)
    REFERENCES `EVE`.`experiment_parameter` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`questions_coded_output`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`questions_coded_output` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `questions_id` INT NOT NULL,
  `string_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_questions_coded_output_questions1_idx` (`questions_id` ASC),
  INDEX `fk_questions_coded_output_store_strings1_idx` (`string_id` ASC),
  CONSTRAINT `fk_questions_coded_output_questions1`
    FOREIGN KEY (`questions_id`)
    REFERENCES `EVE`.`questions` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_questions_coded_output_store_strings1`
    FOREIGN KEY (`string_id`)
    REFERENCES `EVE`.`store_strings` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`sensor_data_3d`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`sensor_data_3d` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data_description_id` INT NOT NULL,
  `session_id` INT NOT NULL,
  `x` VARCHAR(45) NOT NULL,
  `y` VARCHAR(45) NOT NULL,
  `z` VARCHAR(45) NOT NULL,
  `time` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sensor_data_sensor_output1_idx` (`data_description_id` ASC),
  INDEX `fk_sensor_data_sessions1_idx` (`session_id` ASC),
  CONSTRAINT `fk_sensor_data_sensor_output10`
    FOREIGN KEY (`data_description_id`)
    REFERENCES `EVE`.`data_description` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sensor_data_sessions10`
    FOREIGN KEY (`session_id`)
    REFERENCES `EVE`.`sessions` (`session_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EVE`.`system_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EVE`.`system_data` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data_description_id` INT NOT NULL,
  `session_id` INT NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  `time` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_sensor_data_sensor_output1_idx` (`data_description_id` ASC),
  INDEX `fk_sensor_data_sessions1_idx` (`session_id` ASC),
  CONSTRAINT `fk_sensor_data_sensor_output11`
    FOREIGN KEY (`data_description_id`)
    REFERENCES `EVE`.`data_description` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_sensor_data_sessions11`
    FOREIGN KEY (`session_id`)
    REFERENCES `EVE`.`sessions` (`session_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

