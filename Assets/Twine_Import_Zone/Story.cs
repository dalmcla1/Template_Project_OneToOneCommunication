/*
------------------------------------------------
Generated by Cradle 2.0.1.0
https://github.com/daterre/Cradle

Original file: Story.html
Story format: Harlowe
------------------------------------------------
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cradle;
using IStoryThread = System.Collections.Generic.IEnumerable<Cradle.StoryOutput>;
using Cradle.StoryFormats.Harlowe;

public partial class @Story: Cradle.StoryFormats.Harlowe.HarloweStory
{
	#region Variables
	// ---------------

	public class VarDefs: RuntimeVars
	{
		public VarDefs()
		{
		}

	}

	public new VarDefs Vars
	{
		get { return (VarDefs) base.Vars; }
	}

	// ---------------
	#endregion

	#region Initialization
	// ---------------

	public readonly Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros macros1;

	@Story()
	{
		this.StartPassage = "Beginn";

		base.Vars = new VarDefs() { Story = this, StrictMode = true };

		macros1 = new Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros() { Story = this };

		base.Init();
		passage1_Init();
		passage2_Init();
		passage3_Init();
		passage4_Init();
		passage5_Init();
		passage6_Init();
		passage7_Init();
		passage8_Init();
		passage9_Init();
		passage10_Init();
		passage11_Init();
		passage12_Init();
		passage13_Init();
		passage14_Init();
		passage15_Init();
		passage16_Init();
		passage17_Init();
		passage18_Init();
		passage19_Init();
	}

	// ---------------
	#endregion

	// .............
	// #1: Beginn

	void passage1_Init()
	{
		this.Passages[@"Beginn"] = new StoryPassage(@"Beginn", new string[]{  }, passage1_Main);
	}

	IStoryThread passage1_Main()
	{
		yield return text("Guten Tag");
		yield return lineBreak();
		yield return text("Ich möchte dich gerne in meinem Büro begrüssen.");
		yield return lineBreak();
		yield return text("Bist du gut angereist?");
		yield return lineBreak();
		yield return link("Ja, hatte keine Probleme", "Ja, hatte keine Probleme", null);
		yield return lineBreak();
		yield return link("Nein, habe mich verfahren", "Nein, habe mich verfahren", null);
		yield break;
	}


	// .............
	// #2: Ja, hatte keine Probleme

	void passage2_Init()
	{
		this.Passages[@"Ja, hatte keine Probleme"] = new StoryPassage(@"Ja, hatte keine Probleme", new string[]{  }, passage2_Main);
	}

	IStoryThread passage2_Main()
	{
		yield return text("Sehr schön. Wie du weisst, möchten wir über ein Stellenabgebot sprechen. Ich denke es wird nicht lange dauern.");
		yield return lineBreak();
		yield return lineBreak();
		yield return text("Ist es gut für dich, wenn wir gleich beginnen?");
		yield return lineBreak();
		yield return link("Gerne, ich bin parad", "Gerne, ich bin parad", null);
		yield return lineBreak();
		yield return link("Könnte ich zuerst eine Frage stellen?", "Könnte ich zuerst eine Frage stellen?", null);
		yield return lineBreak();
		yield return link("Ich habe meinen Notizblock vergessen", "Ich habe meinen Notizblock vergessen", null);
		yield break;
	}


	// .............
	// #3: Nein, habe mich verfahren

	void passage3_Init()
	{
		this.Passages[@"Nein, habe mich verfahren"] = new StoryPassage(@"Nein, habe mich verfahren", new string[]{  }, passage3_Main);
	}

	IStoryThread passage3_Main()
	{
		yield return text("Ach wirklich? Wo bist du den hingefahren?");
		yield return lineBreak();
		yield return link("Bin falsch abgebogen", "Bin falsch abgebogen", null);
		yield return lineBreak();
		yield return link("Habe die Aussfahrt verpasst", "Habe die Aussfahrt verpasst", null);
		yield break;
	}


	// .............
	// #4: Gerne, ich bin parad

	void passage4_Init()
	{
		this.Passages[@"Gerne, ich bin parad"] = new StoryPassage(@"Gerne, ich bin parad", new string[]{  }, passage4_Main);
	}

	IStoryThread passage4_Main()
	{
		yield return text("Sehr gut. Wie bist du auf unsere Stelle gekommen?");
		yield return lineBreak();
		yield return link("Habe sie im Internet gefunden", "Habe sie im Internet gefunden", null);
		yield return lineBreak();
		yield return link("Stellenanzeiger in der Zeitung", "Stellenanzeiger in der Zeitung", null);
		yield return lineBreak();
		yield return link("Von meinem Kollegen", "Von meinem Kollegen", null);
		yield break;
	}


	// .............
	// #5: Könnte ich zuerst eine Frage stellen?

	void passage5_Init()
	{
		this.Passages[@"Könnte ich zuerst eine Frage stellen?"] = new StoryPassage(@"Könnte ich zuerst eine Frage stellen?", new string[]{  }, passage5_Main);
	}

	IStoryThread passage5_Main()
	{
		yield return text("Aber sicher, was möchtetst du wissen?");
		yield return lineBreak();
		yield return link("Wie viele Interviews gibt es?", "Wie viele Interviews gibt es?", null);
		yield return lineBreak();
		yield return link("Hat es mehrere Bewerber?", "Hat es mehrere Bewerber?", null);
		yield break;
	}


	// .............
	// #6: Ich habe meinen Notizblock vergessen

	void passage6_Init()
	{
		this.Passages[@"Ich habe meinen Notizblock vergessen"] = new StoryPassage(@"Ich habe meinen Notizblock vergessen", new string[]{  }, passage6_Main);
	}

	IStoryThread passage6_Main()
	{
		yield return text("Benötigst du den wirklich? Sonst kann ich dir einen ausleihen, falls du dir Notizen machen möchtest.");
		yield return lineBreak();
		yield return link("Ich möchte meinen holen", "Ich möchte meinen holen", null);
		yield return lineBreak();
		yield return link("Danke, ich nehme gerne Deinen", "Danke, ich nehme gerne Deinen", null);
		yield return lineBreak();
		yield return link("Stimmt, brauche Ihn nicht zwingend", "Stimmt, brauche Ihn nicht zwingend", null);
		yield break;
	}


	// .............
	// #7: Bin falsch abgebogen

	void passage7_Init()
	{
		this.Passages[@"Bin falsch abgebogen"] = new StoryPassage(@"Bin falsch abgebogen", new string[]{  }, passage7_Main);
	}

	IStoryThread passage7_Main()
	{
		yield return text("Ach, das ist natürlich doof. Hast du danach lange den Weg gesucht?");
		yield return lineBreak();
		yield return link("Ja, hat eine Weile gedauert", "Ja, hat eine Weile gedauert", null);
		yield return lineBreak();
		yield return link("Nein, habe es schnell bemerkt", "Nein, habe es schnell bemerkt", null);
		yield break;
	}


	// .............
	// #8: Habe die Aussfahrt verpasst

	void passage8_Init()
	{
		this.Passages[@"Habe die Aussfahrt verpasst"] = new StoryPassage(@"Habe die Aussfahrt verpasst", new string[]{  }, passage8_Main);
	}

	IStoryThread passage8_Main()
	{
		yield return text("Du bist auf der Autobahn gekommen nehmen ich an. Da ist es schon schwierig zu wisse, welche Ausfahrt man nehmen muss.");
		yield return lineBreak();
		yield return link("Habe ich bemerkt.", "Habe ich bemerkt.", null);
		yield break;
	}


	// .............
	// #9: Habe sie im Internet gefunden

	void passage9_Init()
	{
		this.Passages[@"Habe sie im Internet gefunden"] = new StoryPassage(@"Habe sie im Internet gefunden", new string[]{  }, passage9_Main);
	}

	IStoryThread passage9_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #10: Stellenanzeiger in der Zeitung

	void passage10_Init()
	{
		this.Passages[@"Stellenanzeiger in der Zeitung"] = new StoryPassage(@"Stellenanzeiger in der Zeitung", new string[]{  }, passage10_Main);
	}

	IStoryThread passage10_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #11: Von meinem Kollegen

	void passage11_Init()
	{
		this.Passages[@"Von meinem Kollegen"] = new StoryPassage(@"Von meinem Kollegen", new string[]{  }, passage11_Main);
	}

	IStoryThread passage11_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #12: Wie viele Interviews gibt es?

	void passage12_Init()
	{
		this.Passages[@"Wie viele Interviews gibt es?"] = new StoryPassage(@"Wie viele Interviews gibt es?", new string[]{  }, passage12_Main);
	}

	IStoryThread passage12_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #13: Hat es mehrere Bewerber?

	void passage13_Init()
	{
		this.Passages[@"Hat es mehrere Bewerber?"] = new StoryPassage(@"Hat es mehrere Bewerber?", new string[]{  }, passage13_Main);
	}

	IStoryThread passage13_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #14: Ich möchte meinen holen

	void passage14_Init()
	{
		this.Passages[@"Ich möchte meinen holen"] = new StoryPassage(@"Ich möchte meinen holen", new string[]{  }, passage14_Main);
	}

	IStoryThread passage14_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #15: Danke, ich nehme gerne Deinen

	void passage15_Init()
	{
		this.Passages[@"Danke, ich nehme gerne Deinen"] = new StoryPassage(@"Danke, ich nehme gerne Deinen", new string[]{  }, passage15_Main);
	}

	IStoryThread passage15_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #16: Stimmt, brauche Ihn nicht zwingend

	void passage16_Init()
	{
		this.Passages[@"Stimmt, brauche Ihn nicht zwingend"] = new StoryPassage(@"Stimmt, brauche Ihn nicht zwingend", new string[]{  }, passage16_Main);
	}

	IStoryThread passage16_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #17: Ja, hat eine Weile gedauert

	void passage17_Init()
	{
		this.Passages[@"Ja, hat eine Weile gedauert"] = new StoryPassage(@"Ja, hat eine Weile gedauert", new string[]{  }, passage17_Main);
	}

	IStoryThread passage17_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #18: Nein, habe es schnell bemerkt

	void passage18_Init()
	{
		this.Passages[@"Nein, habe es schnell bemerkt"] = new StoryPassage(@"Nein, habe es schnell bemerkt", new string[]{  }, passage18_Main);
	}

	IStoryThread passage18_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #19: Habe ich bemerkt.

	void passage19_Init()
	{
		this.Passages[@"Habe ich bemerkt."] = new StoryPassage(@"Habe ich bemerkt.", new string[]{  }, passage19_Main);
	}

	IStoryThread passage19_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


}